import os
import ctypes
import time
import requests
import cv2
import pyautogui
import platform
import telebot
from telebot import types
import config
import datetime
import colorama
import pyfiglet
import os
import asyncio
from colorama import Fore, Back, Style
import socket
import subprocess


hostname = socket.gethostname()
colorama.init()

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
now = datetime.datetime.now()

bot = telebot.TeleBot(config.TOKEN)

message_text = (
    "‚îå üñ• √ó –°—Ç–∞—Ç—É—Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: `–í–∫–ª—é—á—ë–Ω`\n"
	#"‚îÇ \n"
	f"‚îî ‚òÑ √ó –ù–∞–∑–≤–∞–Ω–∏–µ –ü–ö: `{hostname}` \n"
	" \n"
	"üìÉ √ó –¢–∏–ø –æ—Ç–ø—Ä–∞–≤–∫–∏: `Shell Start Up`"
    " \n"
    f"‚è∞ √ó –í—Ä–µ–º—è –≤–∫–ª—é—á–µ–Ω–∏—è: `{now.strftime('%H:%M')}`\n"
	" \n"
	f"üìÖ √ó –î–∞—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∏—è: `{now.strftime('%Y-%m-%d')}`"
	"  \n"
    "`PCStatus | Sefd1Relax | V3`"
)




keyboard = telebot.types.InlineKeyboardMarkup()
button = telebot.types.InlineKeyboardButton(text="–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä", callback_data="shutdown_computer")
button2 = telebot.types.InlineKeyboardButton(text="–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä", callback_data="restart_computer")
status_bt = telebot.types.InlineKeyboardButton(text="–£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data="status_for_pc")
screen_bt = telebot.types.InlineKeyboardButton(text="–°–∫—Ä–∏–Ω—à–æ—Ç", callback_data="screen_bt")
keyboard.add(button)
keyboard.add(button2)
keyboard.add(status_bt)
keyboard.add(screen_bt)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    if call.data == "shutdown_computer":
        subprocess.run("shutdown /s /t 1", shell=True)
        bot.send_message(call.message.chat.id, "‚îå üñ• √ó –°—Ç–∞—Ç—É—Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: `–í—ã–∫–ª—é—á–µ–Ω–∏–µ`\n"
											   f"‚îî ‚òÑ √ó –ù–∞–∑–≤–∞–Ω–∏–µ –ü–ö: `{hostname}` \n"
											   " \n"
											   "üìÉ √ó –¢–∏–ø –æ—Ç–ø—Ä–∞–≤–∫–∏: `Console | Button`"
											   " \n"
											   f"‚è∞ √ó –í—Ä–µ–º—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è: `{now.strftime('%H:%M')}`\n"
											   " \n"
											   f"üìÖ √ó –î–∞—Ç–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è: `{now.strftime('%Y-%m-%d')}`"
											   " \n"
                                               "`PCStatus | Sefd1Relax | V3`", parse_mode="Markdown")
	

    elif call.data == "restart_computer":
        subprocess.run("shutdown /r /t 1", shell=True)
        bot.send_message(call.message.chat.id, f"‚îå üñ• √ó –°—Ç–∞—Ç—É—Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: `–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞`\n"
											   f"‚îî ‚òÑ √ó –ù–∞–∑–≤–∞–Ω–∏–µ –ü–ö: `{hostname}` \n"
											   f" \n"
											   f"üìÉ √ó –¢–∏–ø –æ—Ç–ø—Ä–∞–≤–∫–∏: `Console | Button`\n"
											   f"‚è∞ √ó –í—Ä–µ–º—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: `{now.strftime('%H:%M')}`\n"
											   f"üìÖ √ó –î–∞—Ç–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: `{now.strftime('%Y-%m-%d')}`\n"
                                                "`PCStatus | Sefd1Relax | V3`", parse_mode="Markdown")
    elif call.data == "status_for_pc":
        bot.send_message(call.message.chat.id, f"‚îå üñ• √ó –°—Ç–∞—Ç—É—Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: `–í–∫–ª—é—á—ë–Ω`\n"
                                               f"‚îî ‚òÑ √ó –ù–∞–∑–≤–∞–Ω–∏–µ –ü–ö: `{hostname}` \n"
                                               f" \n"
                                               f"üìÉ √ó –¢–∏–ø –æ—Ç–ø—Ä–∞–≤–∫–∏: `–£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å`\n"
                                               f"‚è∞ √ó –í—Ä–µ–º—è —Å—Ç–∞—Ç—É—Å–∞: `{now.strftime('%H:%M')}`\n"
                                               f"üìÖ √ó –î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞: `{now.strftime('%Y-%m-%d')}`\n"
                                                "`PCStatus | Sefd1Relax | V3`", parse_mode="Markdown")
		
    elif call.data == "screen_bt":
      screenshot_pc_photo(call.message)


bot.send_message(config.CHAT_ID, text=message_text, reply_markup=keyboard, parse_mode="Markdown")

@bot.message_handler(commands=["sct", "screenshot"])
def screenshot_pc_photo(message):
	filename = f"{time.time()}.jpg"
	pyautogui.screenshot(filename)

	with open(filename, "rb") as img:
		bot.send_photo(message.chat.id, img)
	os.remove(filename)


if __name__ == '__main__':
	bot.polling()